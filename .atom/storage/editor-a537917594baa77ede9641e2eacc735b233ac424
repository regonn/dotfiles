{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1920,"height":1089},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/regonn/Desktop/hackforplay","buffers":[{"text":"<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"x-ua-compatible\" content=\"IE=Edge\">\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\">\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n        <title>hackforplay</title>\n        <script type=\"text/javascript\" src=\"enchant.min.js\"></script>\n        <!-- <script type=\"text/javascript\" src=\"plugins/ui.enchant.js\"></script> -->\n        <script type=\"text/javascript\" src=\"main.js\"></script>\n        <style type=\"text/css\">\n            body {\n                margin: 0;\n                background-color: black;\n            }\n        </style>\n    </head>\n    <body>\n    </body>\n</html>\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":25,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/regonn/Desktop/hackforplay/index.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8597c50a58cd81084b3d933c668873d6101595f1","deserializer":"TextBuffer"},{"text":"/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n)\n|   hackforplayへようこそ、冒険者よ。\n|\n|   その様子だと、もうダンジョンを見てきた\n|   ようだな。スライムの斬り心地はどうだっ\n|   た？...倒せない？...バグってる？\n|\n|   ...その通り!!よくぞ見抜いたな...。\n|   最初は、スライムすら倒せない。それが、\n|   このhackforplayの世界なのだ。\n|\n|   不安か...？怯えるな。心配などいらん。\n|   なぜなら冒険者よ、君には\n|   未来を書き換える能力があるからだッ!!\n|\n|   これより下に書かれた文書は、特殊な言葉\n|   を用いて書かれた「未来の予言書」なのだ。\n|   君には予言を書き換えて、世界を変え、\n|   そしてダンジョンを攻略する力が、ある!!\n|   準備は出来たか？　未来を、頼んだぞ...\n|\n|          Let's hackforplay!!\n|\n|   ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\n|\n\\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nenchant();\nwindow.onload = function() {\n    var game = new Game(160, 160);\n    game.fps = 15;\n    game.preload('map1.gif', 'chara0.png','monster4.gif', 'chara5.png', 'chara7.png', 'bigmonster1.gif', 'effect0.png', 'icon0.png', 'gameover.png', 'clear.png', 'message_window.png', 'sho.png', 'black.png');\n\n    function beginStage(floor){\n        stage = new Group();\n        map = new Map(16, 16);\n        map.image = game.assets['map1.gif'];\n        switch(floor){\n            case 1:\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ステージ 1\n                |   【天地長久のブルースライム】\n                |\n                |   奴の名はブルースライム(blueSlime)。\n                |   いくら攻撃しても倒れない強さの秘訣は、\n                |   その体力(hp)にあると言う...。\n                |   何とかして、hpを減らすことが出来れば\n                |   倒せるかも知れないが...\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n                var blueSlime = new BlueSlime(6, 4); // ブルースライム\n                blueSlime.hp = 99999999;\n\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ...どこを書き換えればいいか、分かった\n                |   だろうか。思い切って書き換えるのだ!!\n                |\n                |   書き換えたら、まずはファイルを保存して\n                |   次にブラウザを更新するのだ。\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n                player.locate(2, 2);\n\n                var man = new NPC(1); // 少年\n                man.locate(4, 1);\n\n                var stair = new Stair(2); // 階段\n                stair.locate(2, 7);\n\n                map.loadData([\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                ],[\n                    [ -1, -1, -1, -1, -1,321,321,321,321,321],\n                    [ -1, -1, -1, -1, -1,321,321,321,321,321],\n                    [ -1, -1, -1, -1, -1,341,321,321,321,321],\n                    [ -1, -1, -1, -1, -1, -1,341,341,341,321],\n                    [ -1, -1, -1, -1, -1, -1, -1,400,400,321],\n                    [321,321,321,321,321,321, -1, -1,400,321],\n                    [341,341,341,341,341,341, -1, -1, -1,321],\n                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1,321],\n                    [ -1, -1, -1, -1, -1, -1, -1, -1,400,321],\n                    [341,341,341,341,341,341,341,341,341,341],\n                ]);\n                map.collisionData = [\n                    [  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],\n                    [  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],\n                    [  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],\n                    [  0,  0,  0,  0,  0,  0,  1,  1,  1,  1],\n                    [  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],\n                    [  1,  1,  1,  1,  1,  1,  0,  0,  1,  1],\n                    [  1,  1,  1,  1,  1,  1,  0,  0,  0,  1],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  1,  1],\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                ];\n\n                var temp_hp = blueSlime.hp;\n                man.talk = function(){\n                    if(blueSlime.hp > 99999990){\n                        switch(this.count){\n                            case 0: this.message.show(\"やあ、こんにちは。こんなところで何をしてるの？ (Zキーで次に進む)\"); break;\n                            case 1: this.message.show(\"きみ、いいものをもってるね。あのバケモノのこと、やっつけてくれるとうれしいなぁ\"); break;\n                            case 2: this.message.show(\"下に行きたいんだけど、あの青いバケモノが、みちをふさいでいるんだ。・・・こまっていたところさ\"); break;\n                            case 3: this.message.show(\"くれぐれも、気をつけてね\"); break;\n                            case 4: this.message.close(); if(blueSlime.hp == 99999999) alert(\"【ヒント】Xキーで剣を使えます\"); break;\n                        }\n                    }else if(blueSlime.scene !== null){\n                        switch(this.count){\n                            case 0: this.message.show(\"・・・・・・。\"); break;\n                            case 1: this.message.show(\"やっぱり、ダメなんだ・・・。さっき石をぶつけてみたけど、ぜんぜんうごかなかったもん\"); break;\n                            case 2: this.message.show(\"まいったなぁ。きみだけがたよりだったのになぁ・・・\"); break;\n                            case 3: this.message.show(\"そうだ、いいものをあげるよ。・・・さっき、そこでひろったんだ\"); break;\n                            case 4: this.message.show(\"ほら、これだよ\");\n                                    createPopup(navigator.onLine ? 'https://note.mu/teramotodaiki/n/nd0add871b1db' : 'offline.html');\n                                    if(!navigator.onLine) alert(\"【ヒント】インターネットに接続されることをお勧めします\"); break;\n                            case 5: this.message.show(\"どうかな。やくにたちそう？\"); break;\n                            case 6: this.message.show(\"ぼく？ぼくは、ここで見ているよ。きみみたいに、つよくないからね\");  break;\n                            case 7: this.message.close(); break;\n                        }\n                    }else{\n                        switch(this.count){\n                            case 0: this.message.show(\"きみってすごいね。たったの\"+temp_hp+\"発でやっつけちゃうなんて\"); break;\n                            case 1: this.message.show(\"これで下に行けるようになったね。じゃあ、ぼくは先に行っているから\"); break;\n                            case 2: this.damage(0); this.message.show(\"じゃあね・・・\"); break;\n                        }\n                    }\n                }\n\n                player.collideWith = [blueSlime, man];\n                stage.addChild(map);\n                stage.addChild(stair);\n                stage.addChild(blueSlime);\n                stage.addChild(man);\n                stage.addChild(player);\n\n                break;\n\n            case 2:\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ステージ 2\n                |   【閉鎖空間のリロケーション】\n                |\n                |   壁に囲まれて、身動きが取れない...ッ!?\n                |   位置(locate)と書かれた部分で、最初\n                |   に立つ位置を決めているらしい。\n                |   (2, 2)とは、一体どういう意味なのか...\n                |   数字を変えれば、ひょっとして...?\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n                var blueSlime1 = new BlueSlime(7, 3); // ブルースライム1\n                blueSlime1.hp = 99999999;\n\n                var blueSlime2 = new BlueSlime(8, 3); // ブルースライム2\n                blueSlime2.hp = 99999999;\n\n                player.locate(2, 2);\n\n                var stair = new Stair(3); // 階段\n                stair.locate(5, 8);\n\n                var sapphire = new Jewel(65); // サファイア\n                sapphire.locate(1, 8);\n\n\n                var man = new NPC(19); // 少年\n                man.locate(0, 7);\n\n                map.loadData([\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                    [342,342,342,342,342,342,342,342,342,342],\n                ],[\n                    [321,341,341,321,341,341,341,341,341,321],\n                    [321, -1, -1,321, -1, -1, -1, -1, -1,321],\n                    [321,400, -1,321, -1, -1, -1, -1, -1,321],\n                    [321,400, -1,321, -1, -1, -1, -1, -1,321],\n                    [321,321,321,321,321,321,321, -1,321,321],\n                    [321,321,321,321,321,321,321, -1,321,321],\n                    [321,341,341,321,321,341,341, -1,321,321],\n                    [321, -1, -1,321,321, -1, -1, -1,321,321],\n                    [321, -1, -1,321,321, -1, -1, -1,321,321],\n                    [321,321,321,321,321,321,321,321,321,321],\n                ]);\n                map.collisionData = [\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  1,  0,  0,  0,  0,  0,  1],\n                    [  1,  0,  0,  1,  0,  0,  0,  0,  0,  1],\n                    [  1,  1,  0,  1,  0,  0,  0,  0,  0,  1],\n                    [  1,  1,  1,  1,  1,  1,  1,  0,  1,  1],\n                    [  1,  1,  1,  1,  1,  1,  1,  0,  1,  1],\n                    [  1,  1,  1,  1,  1,  1,  1,  0,  1,  1],\n                    [  1,  0,  0,  1,  1,  0,  0,  0,  1,  1],\n                    [  1,  0,  0,  1,  1,  0,  0,  0,  1,  1],\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                ];\n\n                man.talk = function(){\n                    switch(this.count){\n                        case 0: this.message.show(\"・・・・・・。\"); break;\n                        case 1: this.message.show(\"どうかした？ぼくのかお、なにかついてる？\"); break;\n                        case 2: this.message.close(); break;\n                    }\n                }\n\n                player.collideWith = [blueSlime1, blueSlime2, man];\n                stage.addChild(map);\n                stage.addChild(stair);\n                stage.addChild(blueSlime1);\n                stage.addChild(blueSlime2);\n                stage.addChild(sapphire);\n                stage.addChild(man);\n                stage.addChild(player);\n                break;\n\n            case 3:\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ステージ 3\n                |   【火炎吐息のトゥルーオアフォルス】\n                |\n                |   巨大なドラゴン(dragon)の炎(fire)で、\n                |   進むことが出来なくなってしまった!!\n                |   なんとかして、炎を止めたいのだが...\n                |   trueとは、「真」を意味する言葉だ。\n                |   それとは逆の「偽」を意味する言葉もある。\n                |   その言葉に書き換える事が出来れば、炎を\n                |   止められるかも知れない...どんな方法を\n                |   使ってもいい。「偽」を調べるしかない!!\n                |\n                |https://www.google.co.jp/webhp?q=trueの反対\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n\n                var dragon = new Dragon(); // ドラゴン\n                dragon.fire = true;\n\n                player.locate(2, 2);\n\n                var stair = new Stair(4); // 階段\n                stair.locate(8, 8);\n\n                var ruby = new Jewel(66); // ルビー\n                ruby.locate(5, 5);\n\n                var man = new NPC(1); // 少年\n                man.locate(3, 1);\n\n                map.loadData([\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                    [323,323,323,323,323,323,323,323,323,323],\n                ],[\n                    [340,340,340,340,340,340,340,340,340,340],\n                    [ 36, -1, -1, -1, 34, 35, 35, 35, 35, 35],\n                    [ 56, -1, -1, -1, 54, 55, 55, 55, 55, 55],\n                    [ 56, -1, -1, -1, 54, 55, 55, 55, 55, 55],\n                    [ 56, -1, -1, -1, 74, 75, 17, 55, 55, 55],\n                    [ 56, -1, -1, -1, -1, -1, 54, 55, 55, 55],\n                    [ 56, -1, -1, -1, 10, 11, 77, 75, 17, 55],\n                    [ 56, -1, -1, -1, -1, -1, -1, -1, 74, 75],\n                    [ 14, 36, -1, -1, -1, -1, -1, -1, -1, -1],\n                    [ 55, 14, 35, 35, 35, 35, 35, 35, 35, 35],\n                ]);\n                map.collisionData = [\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  0,  0,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],\n                    [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                ];\n\n                man.talk = function(){\n                    switch(this.count){\n                        case 0: this.message.show(\"こんなに大きなバケモノまでいるなんて！ここってほんとう、おそろしい所だよね\"); break;\n                        case 1: this.message.show(\"うっ、ここまで、ねっきが・・・。たのむから、せなかを押したりしないでおくれよ・・・。\"); break;\n                        case 2: this.message.close();\n                    }\n                }\n\n\n                stage.addChild(map);\n                stage.addChild(stair);\n                if(dragon.fire) {\n                    stage.addChild(ruby);\n                    stage.addChild(man);\n                    player.collideWith = [man];\n                }\n                eventFlag = !dragon.fire;\n                stage.addChild(dragon);\n                stage.addChild(player);\n                break;\n\n            case 4:\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ステージ 4\n                |   【死屍累々のメイズ】\n                |\n                |   骸骨(skull)に触れればもはや命はない。\n                |   迷路を彷徨う骸骨...奴に触れずに迷路を\n                |   攻略するには、どうすればいいのだ...!?\n                |\n                |   onenterframeという部分で、奴は動いて\n                |   いるらしいが、それを上手く利用出来ない\n                |   だろうか...\n                |\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n                player.locate(1, 1);\n\n                var skulls = [];\n                for (var i = 0; i < 10; i++) {\n                    skulls[i] = new Skull();\n                    player.collideWith.push(skulls[i]);\n                    skulls[i].follow = i == 0 ? player : skulls[i-1];\n                    skulls[i].moveTo(128+i*10, 128+i*10);\n\n                    skulls[i].onenterframe = function(){\n\n                        var followX = this.follow.x - this.x;\n                        var followY = this.follow.y - this.y;\n                        var absolute = Math.sqrt(followX * followX + followY * followY);\n                        if(absolute > 0){\n                            this.moveBy(followX / absolute, followY / absolute);\n                        }\n\n                        if(this.intersect(player)){\n                            player.damage(1);\n                        }\n                    }\n                }\n\n\n                var stair = new Stair(5); // 階段\n                stair.locate(8, 8);\n\n                var diamond = new Jewel(64); // ダイヤモンド\n                diamond.locate(8, 6);\n\n                map.loadData([\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                ],[\n                    [420,420,420,420,420,420,420,420,420,420],\n                    [420, -1,420,420,420,420,420,420,420,420],\n                    [420, -1,420, -1, -1, -1,420,420,420,420],\n                    [420, -1,420, -1,420, -1,420,420,420,420],\n                    [420, -1,420, -1,420, -1,420,420,420,420],\n                    [420, -1, -1, -1,420, -1,420,420,420,420],\n                    [420,420,420,420, -1, -1,420,420,420,420],\n                    [420,420,420,420, -1,420, -1, -1, -1,420],\n                    [420,420,420,420, -1, -1, -1,420, -1,420],\n                    [420,420,420,420,420,420,420,420,420,420],\n                ]);\n                map.collisionData = [\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  1,  1,  1,  1,  1,  1,  1,  1],\n                    [  1,  0,  1,  0,  0,  0,  1,  1,  1,  1],\n                    [  1,  0,  1,  0,  1,  0,  1,  1,  1,  1],\n                    [  1,  0,  1,  0,  1,  0,  1,  1,  1,  1],\n                    [  1,  0,  0,  0,  1,  0,  1,  1,  1,  1],\n                    [  1,  1,  1,  1,  0,  0,  1,  1,  0,  1],\n                    [  1,  1,  1,  1,  0,  1,  0,  0,  0,  1],\n                    [  1,  1,  1,  1,  0,  0,  0,  1,  0,  1],\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                ];\n\n                stage.addChild(diamond);\n                stage.addChild(map);\n                stage.addChild(stair);\n                skulls.forEach(function(value){stage.addChild(value);});\n                stage.addChild(player);\n                break;\n\n            case 5:\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ステージ 5\n                |   【因果応報のインヘリタンス】\n                |\n                |   自分(player)と戦っているのは...\n                |   ...まさか、自分自身...!!?\n                |\n                |   自分が強くなればなるほど、\n                |   悪しき者(ashiki_mono)に力を与えて\n                |   しまうというのなら...果たして、勝つ\n                |   未来を創り出すことは出来るのか！？\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n                player.locate(1, 4);\n                player.hp = 1000;\n                player.atk = 100;\n\n                var Ashiki_kokoro = enchant.Class.create(Player, {\n                    initialize : function(){\n                        Player.call(this);\n                        this.control = false;\n                        var image = new Surface(288, 128);\n                        image.draw(game.assets['chara7.png'], 0, 0, 288, 128, 0, 0, 288, 128);\n                        this.image = image;\n                        this.hp = player.hp * 2;\n                        this.atk = player.atk * 2;\n                    }\n                });\n\n                var ashiki_mono = new Ashiki_kokoro(); // 悪しき者\n                ashiki_mono.locate(8, 4);\n\n                map.loadData([\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                    [ 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n                ],[\n                    [110,111,111, 93, 93, 93, 93,111,111,112],\n                    [130,131, 93,131,131,131,131, 93,131,132],\n                    [130, 93,131,131,131,131,131,131, 93,132],\n                    [ 93,131,131,131,131,131,131,131,131, 93],\n                    [ 93,131,131,131,131,131,131,131,131, 93],\n                    [ 93,131,131,131,131,131,131,131,131, 93],\n                    [130, 93,131,131,131,131,131,131, 93,132],\n                    [130,131, 93,131,131,131,131, 93,131,132],\n                    [130,131,131, 93, 93, 93, 93,131,131,132],\n                    [150,151,151,151,151,151,151,151,151,152],\n                ]);\n                map.collisionData = [\n                    [  0,  0,  0,  1,  1,  1,  1,  0,  0,  0],\n                    [  0,  0,  1,  0,  0,  0,  0,  1,  0,  0],\n                    [  0,  1,  0,  0,  0,  0,  0,  0,  1,  0],\n                    [  1,  0,  0,  0,  0,  0,  0,  0,  0,  1],\n                    [  1,  0,  0,  0,  0,  0,  0,  0,  0,  1],\n                    [  1,  0,  0,  0,  0,  0,  0,  0,  0,  1],\n                    [  0,  1,  0,  0,  0,  0,  0,  0,  1,  0],\n                    [  0,  0,  1,  0,  0,  0,  0,  1,  0,  0],\n                    [  0,  0,  0,  1,  1,  1,  1,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                ];\n\n                ashiki_mono.collideWith = [player];\n                player.collideWith = [ashiki_mono];\n\n                stage.addChild(map);\n                stage.addChild(player);\n                stage.addChild(ashiki_mono);\n                break;\n            case 6:\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   ステージ ６\n                |   【機械演算のパラドックス】\n                |\n                |   ルビーとスター。二つの間には、片方を\n                |   得るために片方を捨てなければならない\n                |   という制約が存在する。\n                |\n                |   プログラミングで、世界の法則に抗え。\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n                player.locate(1, 1);\n\n                var man = new NPC(10); // 少年\n                man.locate(4, 3);\n\n                var stair = new Stair(7); // 階段\n                stair.locate(6, 4);\n\n                var image = new Surface(16, 16);\n                image.draw(game.assets['map1.gif'], 32, 320, 16, 16, 0, 0, 16, 16);\n                stair.image = image;\n\n                map.loadData([\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                ],[\n                    [340,340,340,340,340,340,340,340,340,206],\n                    [340,421,421, -1, -1, -1, -1, -1, -1,206],\n                    [340,340,340,340,340,340,340, -1, -1,206],\n                    [ -1,421, 23,421,421,421,421,401, -1,206],\n                    [ -1,421, 43,421, -1, -1, -1,401, -1,206],\n                    [340,340, 43,340,340,340,340,340,421,206],\n                    [184,186, 64,  1, 25, 25, 26,421,421,206],\n                    [204,164,185,186, 44, 45, 45, 26,421,206],\n                    [224,225,225,206, 64, 65, 65, 66, -1,206],\n                    [224,225,225,225,225,225,225,225,225,226],\n                ]);\n                map.collisionData = [\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],\n                ];\n\n                man.talk = function(){\n                    if(eventFlag){\n                        switch(this.count){\n                            case 0: this.message.show(\"・・・・・・。\"); break;\n                            case 1: this.message.show(\"じつは・・・きみに、あやまらなくっちゃいけないことがあるんだ\"); break;\n                            case 2: this.message.show(\"さっき、ドラゴンのすみかにルビーがおちていたんだけど\"); break;\n                            case 3: this.message.show(\"ひろおうとして・・・まちがって、穴におとしちゃったんだ\"); break;\n                            case 4: this.message.show(\"そのかわりに、これをあげるよ。くろい男の人が、おとしていったんだ\"); break;\n                            case 5: var star = new Jewel(30); star.pickup();\n                             this.message.show(\"じゃあ、そろそろ行こうか。\"); break;\n                            case 6: this.message.close(); break;\n                        }\n                    }else{\n                        switch(this.count){\n                            case 0: this.message.show(\"やあ、また会ったね。\"); break;\n                            case 1: this.message.show(\"さっき、いいものをひろったよ。フフ、もってかえったら、みんなの人気者になれるかなぁ\"); break;\n                            case 2: this.message.show(\"きみも、なにかひろえたかい？ここにはきれいなものがいっぱいおちているみたいだよ\"); break;\n                            case 3: this.message.show(\"じゃあ、そろそろ行こうか。\"); break;\n                            case 4: this.message.close();\n                        }\n                    }\n                }\n\n                player.collideWith = [man];\n                stage.addChild(map);\n                stage.addChild(man);\n                stage.addChild(stair);\n                stage.addChild(player);\n                break;\n            case 7:\n                var clear = new Sprite(267, 48);\n                clear.image = game.assets['clear.png'];\n                clear.scale(0.6, 0.6);\n                clear.moveTo(-54, 54);\n                clear.opacity = 0;\n\n                clear.onenterframe = function(){\n                    clear.opacity += 0.05;\n                    if(clear.opacity > 1){\n                        clear.opacity = 1;\n                    }else{\n                        clear.y -= 1;\n                    }\n                }\n\n                var score = new Label(\"\");\n                var scoreText = \"ホウセキ：  \" + (player.jewels.length * 25) + \"％\";\n                score.font = \"bold 14px sans-serif\";\n                score.moveTo(20, 100);\n                score.color = \"#ffffff\";\n\n                var tick = 0;\n                score.onenterframe = function(){\n                    if(clear.opacity >= 1 && ((tick++) % 4 == 0)){\n                        if(score.text.length < scoreText.length){\n                            score.text = scoreText.slice(0, score.text.length + 1);\n                        }\n                    }\n                }\n\n                stage.addChild(clear);\n                stage.addChild(score);\n                break;\n\n            default :\n                /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n                )\n                |   【冒険の始まり】\n                |\n                \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n                map.loadData([\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                    [322,322,322,322,322,322,322,322,322,322],\n                ],[\n                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n                    [ -1,461,462, -1,461,462, -1,461,462,421],\n                    [ -1,481,482, -1,481,482,421,481,482,421],\n                    [ -1,421,421,421,421,421,421,421,421, -1],\n                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n                    [ -1,461,462, -1,461,462, -1,461,462, -1],\n                    [ -1,481,482, -1,481,482, -1,481,482, -1],\n                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n                ]);\n                map.collisionData = [\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                    [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\n                ];\n\n                player.locate(2, 5);\n\n                var stair = new Stair(1);\n                stair.locate(7, 5);\n\n                stage.addChild(map);\n                stage.addChild(stair);\n                stage.addChild(player);\n                break;\n        }\n\n        game.rootScene.addChild(stage);\n        showAchievements();\n\n    }\n\n\n    /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\\\n    )\n    |   エクストラステージ\n    |   【世界創造のエンチャント】\n    |\n    |   ここまでのステージを全てクリアしたなら、\n    |   読んでみるといい。書き換えてみるといい。\n    |   そうすれば、この世界の驚くべき自由度と、\n    |   無限大の可能性を感じられるだろう...。\n    |\n    |   この世界に魅了(enchant)され、更なる\n    |   高みを目指したいと思ったならば...\n    |   #hackforplay で、ハックし続けるのだ!!\n    |\n    \\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n    // 重要な変数\n    var player, stage, map, stair, eventFlag, achievements;\n\n    // ゲームが最初に始まるとき\n    game.onload = function() {\n\n        game.keybind(\"X\".charCodeAt(0), 'a');\n        game.keybind(\"Z\".charCodeAt(0), 'b');\n        player = new Player();\n\n        beginStage(0);\n    };\n\n    // 状態の定義\n    var BehaviorTypes = {\n        Idle : 0,       // 立ち状態\n        Walk : 1,       // 歩き状態\n        Attack : 2,     // 攻撃状態\n        Damaged : 3,    // 被撃状態\n        Dead : 4        // 死亡状態\n    };\n\n    // プレイヤー\n    var Player = enchant.Class.create(enchant.Sprite, {\n        initialize : function(){\n            enchant.Sprite.call(this, 32, 32);\n            var image = new Surface(288, 128);\n            image.draw(game.assets['chara5.png'], 0, 0, 288, 128, 0, 0, 288, 128);\n            this.image = image;\n            this.x = 8;\n            this.y = 0;\n            this.atk = 1;\n            this.hp = 1;\n            this.walkable = true;\n\n            this.behavior = BehaviorTypes.Idle;\n            this.direction = 0;\n            this.animCount = 1;\n            this.damageFlag = false;\n            this.jewels = [];\n\n            this.collideWith = [];\n            this.control = true;\n        },\n        onenterframe : function(){\n            var input = { x:0, y:0, d:this.direction };\n            if (game.input.up) {\n                input.d = this.control ? 3 : 0;\n                input.y = this.control ?-1 : 1;\n            } else if (game.input.down) {\n                input.d = this.control ? 0 : 3;\n                input.y = this.control ? 1 :-1;\n            } else if (game.input.left) {\n                input.d = this.control ? 1 : 2;\n                input.x = this.control ? -1: 1;\n            } else if (game.input.right) {\n                input.d = this.control ? 2 : 1;\n                input.x = this.control ? 1 :-1;\n            }\n            this.animCount ++;\n            switch(this.behavior){\n                case BehaviorTypes.Idle:\n                    this.frame = this.direction * 9 + 1;\n                    this.animCount = 0;\n                    // 攻撃\n                    if(game.input.a){\n                        this.behavior = BehaviorTypes.Attack;\n                        var chara = this;\n                        this.tl.delay(2).then(function(){\n                            var _x = this.x + (this.direction == 1 ? -16 : (this.direction == 2 ? 16 : 0));\n                            var _y = this.y + (this.direction == 3 ? -16 : (this.direction == 0 ? 16 : 0));\n                            var enemies = this.findEnemies(_x + 16, _y + 24);\n                            enemies.forEach(function(enemy){\n                                enemy.damage(chara.atk);\n                            });\n                        });\n                    }else if(this.walkable){\n                        // 移動\n                        this.direction = input.d;\n                        if (input.x || input.y) {\n                            var _x = this.x + input.x * 16;\n                            var _y = this.y + input.y * 16;\n                            var enemies = this.findEnemies(_x + 16, _y + 24);\n\n                            if (-8 <= _x && _x < map.width && -16 <= _y && _y < map.height &&\n                                !map.hitTest(_x + 16, _y + 16) && enemies.length < 1) {\n                                    this.behavior = BehaviorTypes.Walk;\n                                    this.tl.moveTo(_x, _y, 4).then(function(){\n                                    this.animCount = 0;\n                                    this.behavior = BehaviorTypes.Idle;\n                                });\n                            }\n                        }\n                    }\n                    break;\n\n                case BehaviorTypes.Walk:\n                    this.frame = this.direction * 9 + (this.animCount % 3);\n                    break;\n\n                case BehaviorTypes.Attack:\n                    this.frame = this.direction * 9 + (this.animCount / 2 % 3) + 6;\n                    if(this.animCount > 5){\n                        this.anim = 1;\n                        this.behavior = BehaviorTypes.Idle;\n                    }\n                    break;\n\n                case BehaviorTypes.Dead:\n                    this.frame = 1;\n                    if(this.animCount < 10){\n                        this.opacity = (10 - this.animCount) / 10.0;\n                    }else if(this === player){\n                        var gameOver = new Sprite(189, 97);\n                        gameOver.image = game.assets['gameover.png'];\n                        gameOver.scale(0.8, 0.8);\n                        gameOver.moveTo(-15, 32);\n                        this.scene.addChild(gameOver);\n                        stage.removeChild(this);\n                    }else{\n                        var stair = new Stair(6);\n                        stair.moveTo(this.x + 8, this.y + 16);\n                        stage.insertBefore(stair, player);\n                        stage.removeChild(this);\n                        player.avoid(this);\n                    }\n                    break;\n            }\n            // ダメージを受けたときの点滅\n            if(this.damageFlag){\n                this.opacity = this.opacity == 0 ? 1 : 0;\n            }\n        },\n        damage : function(atk){\n            if( this.behavior != BehaviorTypes.Damaged &&\n                this.behavior != BehaviorTypes.Dead){\n                this.hp -= atk;\n                if(this.hp > 0){\n                    this.damageFlag = true;\n                    this.tl.delay(4).then(function(){\n                        this.opacity = 1;\n                        this.damageFlag = false;\n                    });\n                }else{\n                    this.behavior = BehaviorTypes.Dead;\n                }\n                this.animCount = 0;\n            }\n        },\n        avoid : function(enemy){\n            var chara = this;\n            this.collideWith.some(function(v, i){\n                if(enemy == v){\n                    chara.collideWith.splice(i, 1);\n                }\n            });\n        },\n        locate : function(x, y){\n            this.x = x * 16 - 8;\n            this.y = y * 16 - 16;\n        },\n        findEnemies : function(x, y){\n            var out = [];\n            this.collideWith.forEach(function(item){\n                if(item.x < x && x < item.x + item.width &&\n                    item.y < y && y < item.y + item.height){\n                    out[out.length] = item;\n                }\n            });\n            return out;\n        }\n    });\n\n    // ブルースライム\n    var BlueSlime = enchant.Class.create(enchant.Sprite, {\n        initialize : function(x, y){\n            enchant.Sprite.call(this, 16, 16);\n            var image = new Surface(192, 96);\n            image.draw(game.assets['monster4.gif'], 0, 0, 192, 96, 0, 0, 64, 32);\n            this.image = image;\n            this.frame = 2;\n            this.x = 16 * x;\n            this.y = 16 * y;\n            this.hp = 1;\n            this.animCount = 0;\n            this.behavior = BehaviorTypes.Idle;\n        },\n        damage : function(atk){\n            if( this.behavior != BehaviorTypes.Damaged &&\n                this.behavior != BehaviorTypes.Dead){\n                this.hp -= atk;\n                if(this.hp > 0){\n                    this.behavior = BehaviorTypes.Damaged;\n                    this.tl.delay(3).then(function(){\n                        this.behavior = BehaviorTypes.Idle;\n                    });\n                }else{\n                    this.behavior = BehaviorTypes.Dead;\n                }\n            }\n        },\n        onenterframe : function(){\n            this.animCount++;\n            switch(this.behavior){\n                case BehaviorTypes.Idle:\n                    this.frame = 2 + (this.animCount / 3) % 2;\n                    break;\n                case BehaviorTypes.Damaged:\n                    this.frame = 2 + this.animCount + (this.animCount > 1 ? 8 : 0);\n                    if(this.animCount > 3){\n                        this.behavior = BehaviorTypes.Idle;\n                    }\n                    break;\n                case BehaviorTypes.Dead:\n                    this.frame = 2 + this.animCount + (this.animCount == 4 ? 9 : (this.animCount > 1 ? 8 : 0));\n                    if(this.animCount > 4){\n                        stage.removeChild(this);\n                        player.avoid(this);\n                    }\n                    break;\n            }\n        }\n    });\n\n    // ドラゴン\n    var Dragon = enchant.Class.create(enchant.Sprite, {\n        initialize : function(){\n            enchant.Sprite.call(this, 80, 80);\n            var image = new Surface(320, 240);\n            image.draw(game.assets['bigmonster1.gif'], 0, 0, 320, 240, 0, 0, 320, 240);\n            this.image = image;\n            this.frame = 0;\n            this.x = 16 * 7 - 32;\n            this.y = 16 * 6 - 64;\n            this.animCount = 0;\n            this.behavior = BehaviorTypes.Idle;\n            this.fire = true;\n        },\n        onenterframe : function(){\n            this.animCount++;\n            switch(this.behavior){\n                case BehaviorTypes.Idle:\n                    if(this.animCount > 4){\n                        this.animCount = 4;\n                        this.behavior = BehaviorTypes.Attack;\n                    }\n                    this.frame = this.animCount;\n                    break;\n\n                case BehaviorTypes.Attack:\n                    if(this.fire){\n                        var emit = new Fire(\n                            this.x +  4 + Math.random() * 4,\n                            this.y + 22 + Math.random() * 4,\n                            -5 - Math.random() * 4,\n                            1 + Math.random() * 6);\n                        stage.addChild(emit);\n                    }\n                    if(this.animCount > 7){\n                        this.animCount = 7;\n                    }\n                    this.frame = 3 + this.animCount;\n                    break;\n            }\n        }\n    });\n\n    // ドラゴンが吐く炎\n    var Fire = enchant.Class.create(enchant.Sprite, {\n        initialize : function(x, y, vx, vy){\n            enchant.Sprite.call(this, 16, 16);\n            this.moveTo(x, y);\n            this.vx = vx;\n            this.vy = vy;\n            this.rotate(Math.random() * 360);\n            this.scale(0.5, 0.5);\n            var image = new Surface(80, 16);\n            image.draw(game.assets['effect0.png'], 0, 0, 80, 16, 0, 0, 80, 16);\n            this.image = image;\n            this.animCount = 0;\n        },\n        onenterframe : function(){\n            this.animCount++;\n            if(this.animCount > 14){\n                stage.removeChild(this);\n            }else{\n                this.frame = this.animCount / 3;\n                this.intersect(enchant.Sprite).forEach(function(value){\n                    if(value.damage){\n                        value.damage(9999);\n                    }\n                });\n            }\n            this.moveBy(this.vx, this.vy);\n            this.scaleX = 1 + this.animCount / 5;\n            this.scaleY = 1 + this.animCount / 5;\n            this.opacity = (15 - this.animCount) / 15.0;\n        }\n    });\n\n    // 骸骨\n    var Skull = enchant.Class.create(enchant.Sprite, {\n        initialize : function(){\n            enchant.Sprite.call(this, 16, 16);\n            var image = new Surface(16, 16);\n            image.draw(game.assets['icon0.png'], 11 * 16, 0, 16, 16, 0, 0, 16, 16);\n            this.image = image;\n            this.count = 0;\n            this.reverse = false;\n            this.behavior = BehaviorTypes.Idle;\n            this.hp = 1;\n        },\n        damage : function(atk){\n            this.hp -= 0;\n            if(this.hp <= 0){\n                stage.removeChild(this);\n                player.avoid(this);\n            }\n        },\n    });\n\n    // 地下に続く階段\n    var Stair = enchant.Class.create(enchant.Sprite, {\n        initialize : function(floor){\n            enchant.Sprite.call(this, 16, 16);\n            var image = new Surface(16, 16);\n            image.draw(game.assets['map1.gif'], 32, 336, 16, 16, 0, 0, 16, 16);\n            this.image = image;\n            this.floor = floor;\n        },\n        onenterframe : function(){\n            if(player.x + 8 == this.x && player.y + 16 == this.y) {\n                var black = new Sprite(160, 160);\n                black.image = game.assets['black.png'];\n                black.opacity = 0;\n                player.walkable = false;\n                this.onenterframe = function(){\n                    black.opacity += 0.08;\n                    if(black.opacity >= 1){\n                        this.scene.removeChild(stage);\n                        beginStage(this.floor);\n                        player.walkable = true;\n                    }\n                }\n                stage.addChild(black);\n            }\n        },\n        locate : function(x, y){\n            this.x = x * 16;\n            this.y = y * 16;\n        }\n    });\n\n    // 宝石\n    var Jewel = enchant.Class.create(enchant.Sprite, {\n        initialize : function(id){\n            enchant.Sprite.call(this, 16, 16);\n            var image = new Surface(16, 16);\n            image.draw(game.assets['icon0.png'], (id % 16) * 16, parseInt(id / 16) * 16, 16, 16, 0, 0, 16, 16);\n            this.image = image;\n            this.id = id;\n        },\n        onenterframe : function(){\n            if(player.x + 8 == this.x && player.y + 16 == this.y){\n                this.pickup();\n                stage.removeChild(this);\n            }\n        },\n        locate : function(x, y){\n            this.moveTo(16*x, 16*y);\n        },\n        pickup : function(){\n            if(player.jewels.indexOf(this.id) == -1){\n                player.jewels.push(this.id);\n            }\n            showAchievements();\n        }\n    });\n\n    // NPC\n    var NPC = enchant.Class.create(enchant.Sprite, {\n        initialize : function(id){\n            enchant.Sprite.call(this, 32, 32);\n            var image = new Surface(32, 32);\n            image.draw(game.assets['chara0.png'], (id % 9) * 32, parseInt(id / 9) * 32, 32, 32, 0, 0, 32, 32);\n            this.image = image;\n            this.isTalking = false;\n            this.message = null;\n            this.keyEnable = true;\n            this.windowEnable = true;\n        },\n        locate : function(x, y){\n            this.x = x * 16 - 8;\n            this.y = y * 16 - 16;\n        },\n        onenterframe : function(){\n            if(this.isTalking){\n                if(this.isTalkable() == false){\n                    if(this.message.scene !== null)\n                        this.message.close();\n                    this.isTalking = false;\n                }else if(game.input.b){\n                    if(this.keyEnable){\n                        if(this.message.label.opacity < 1) this.message.label.opacity = 1;\n                        else { this.count ++; this.talk(); }\n                        this.keyEnable = false;\n                    }\n                }else{\n                    this.keyEnable = true;\n                }\n            }else if(this.isTalkable()){\n                this.isTalking = true;\n                this.count = 0;\n                if(this.message === null) this.message = new MessageWindow();\n                this.scene.addChild(this.message);\n                this.scene.addChild(this.message.label);\n                this.talk();\n            }\n        },\n        isTalkable : function(){\n            // プレイヤーが上にいるとき, 右にいるとき, 左にいるとき, 下にいるとき\n            return  (player.x == this.x && player.y == this.y - 16 && player.direction == 0) ||\n                    (player.x == this.x + 16 && player.y == this.y && player.direction == 1) ||\n                    (player.x == this.x - 16 && player.y == this.y && player.direction == 2) ||\n                    (player.x == this.x && player.y == this.y + 16 && player.direction == 3);\n        },\n        damage : function(atk){\n            if(this.message === null){\n                this.isTalking = true;\n                this.count = 0;\n                this.message = new MessageWindow();\n                this.scene.addChild(this.message);\n                this.scene.addChild(this.message.label);\n            }\n            this.message.show(\"うっ・・・\");\n            this.onenterframe = function(){\n                this.opacity -= 0.05;\n                this.message.opacity = this.message.label.opacity = this.opacity;\n                if(this.message.opacity <= 0){\n                    this.message.close();\n                    stage.removeChild(this);\n                    player.avoid(this);\n                }\n            }\n        },\n        talk : function(){}\n    });\n    // 会話（メッセージ）をするウィンドウ\n    var MessageWindow = enchant.Class.create(enchant.Sprite, {\n        initialize : function(){\n            enchant.Sprite.call(this, 160, 48);\n            this.image = game.assets['message_window.png'];\n            this.moveTo(0, 112);\n            this.label = new Label();\n\n            this.label.font = \"bold 7px sans-serif\";\n            this.label.width = 152;\n            this.label.moveTo(4, 116);\n        },\n        show : function(text){\n            this.label.text = text;\n        },\n        close : function(){\n            if(this != null && this.label != null){\n                this.scene.removeChild(this.label);\n                this.scene.removeChild(this);\n            }\n        }\n    });\n\n    function showAchievements(){\n        if(achievements === undefined){\n            achievements = new Group();\n        }else{\n            var children = achievements.childNodes;\n            children.forEach(function(child){\n                achievements.removeChild(child);\n            });\n            game.rootScene.removeChild(achievements);\n        }\n        game.rootScene.addChild(achievements);\n\n        player.jewels.forEach(function(id, index){\n            var icon = new Sprite(16, 16);\n            icon.moveTo(index * 16, 0);\n            var image = new Surface(16, 16);icon\n            image.draw(game.assets['icon0.png'], (id % 16) * 16, parseInt(id / 16) * 16, 16, 16, 0, 0, 16, 16);\n            icon.image = image;\n            icon.opacity = 0.5;\n            achievements.addChild(icon);\n        });\n    }\n\n    // 別のウィンドウを開く画像\n    function createPopup(url){\n        var image = document.createElement('img');\n        image.src = \"sho.png\";\n        image.width = image.height = game.scale * 64;\n        image.style.position = 'absolute';\n        image.style.left = game.scale * 48 + \"px\";\n        image.style.top = game.scale * 64 + \"px\";\n        image.style.zIndex = 1;\n        image.style.opacity = 0;\n        var time = +new Date();\n        function fadeIn(_image, _time){\n            window.setTimeout(function(){\n                var spend = (new Date() - _time) / 1000;\n                if(spend < 1.0){\n                    _image.style.opacity = spend;\n                    _image.style.top = game.scale * (64 - 16 * spend) + \"px\";\n                    fadeIn(_image, _time);\n                }else{\n                    _image.style.opacity = 1;\n                    _image.style.top = game.scale * 48 + \"px\";\n                }\n            }, 100);\n        }\n        fadeIn(image, +new Date());\n        image.addEventListener('click', function(e){\n            window.open(url, 'howtoplay');\n            document.body.removeChild(this);\n        });\n\n        document.body.appendChild(image);\n    }\n\n    // 予言書は書き終えた。ゲームスタート!!\n    game.start();\n}\n\n/*\n\n(c) 寺本大輝 Teramoto Daiki\n\nhackforplayは、株式会社ユビキタスエンターテイメント様のゲームエンジンenchant.jsを用いて、寺本大輝が作成したプログラミング教育のためのオープンソースソフトウェアです。\nenchant.jsは、ユビキタスエンターテイメント社が定めるMITライセンスが適用されます。LICENSE.txtをご覧ください。\nまた、このソースコード(main.js)も、MITライセンスでリリースしています。著作権表示を消さない限り、「ソースコードの改変」「再配布」を自由にしていただくことが可能です。\n事前の連絡は必要ありません。SNSなどでシェアされる場合は、#hackforplayをつけて頂くと良いかと思われます。\nただし、enchant.jsを商用利用・法人利用される場合は、ユビキタスエンターテイメント社にご連絡下さい。enchant.js公式HPよりお問い合わせください。\n\n寺本大輝Email: i101323@gmail.com\n寺本大輝Twitter: @teramotodaiki\n寺本大輝Facebook: https://www.facebook.com/Sougouch.Teramoto\nenchant.js公式HP: http://enchantjs.com/ja/resource-ja/license/\n\nversion 0.1 2014/7\n\n*/","markers":{"markers":{"1":{"id":1,"range":[[0,0],[1245,2]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":57,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/regonn/Desktop/hackforplay/main.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9c0fa51f81243b1a4dafcd9c12b53a2dd7ee11b1","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":25,"softTabs":true,"displayBuffer":{"id":26,"softWrap":false,"editorWidthInChars":167,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/regonn/Desktop/hackforplay/index.html","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":57,"softTabs":true,"displayBuffer":{"id":58,"softWrap":false,"editorWidthInChars":170,"scrollTop":23915,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/regonn/Desktop/hackforplay/main.js","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/regonn/Desktop/hackforplay/main.js","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"packagesWithActiveGrammars":["language-html","language-javascript","language-css"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/regonn/Desktop/hackforplay/index.html":1406873649602,"/Users/regonn/Desktop/hackforplay/main.js":1406873652573},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":1979825},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/regonn/Desktop/hackforplay/main.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}